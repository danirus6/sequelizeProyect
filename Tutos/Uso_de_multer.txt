npm install --save multer
const express = require('express')
const multer  = require('multer')
const upload = multer({ dest: 'uploads/' })

const app = express()

app.post('/profile', upload.single('avatar'), function (req, res, next) {
})

app.post('/photos/upload', upload.array('photos', 12), function (req, res, next) {
})

const cpUpload = upload.fields([{ name: 'avatar', maxCount: 1 }, { name: 'gallery', maxCount: 8 }])
app.post('/cool-profile', cpUpload, function (req, res, next) {
})



Esto es para texto, únicamente:
const express = require('express')
const app = express()
const multer  = require('multer')
const upload = multer()

app.post('/profile', upload.none(), function (req, res, next) {
  // req.body contains the text fields
})


Esto es para indicar un destino de lo que se sube (para casos como el del admin)
const upload = multer({ dest: 'uploads/' })

Key		Description					Note
fieldname	Field name specified in the form	 
originalname	Name of the file on the user’s computer	 
encoding	Encoding type of the file	 
mimetype	Mime type of the file	 
size		Size of the file in bytes	 
destination	The folder to which the file has been saved	DiskStorage
filename	The name of the file within the destination	DiskStorage
path		The full path to the uploaded file		DiskStorage
buffer		A Buffer of the entire file			MemoryStorage


- single(fieldname)
  Accept a single file with the name fieldname. The single file will be stored in req.file.
- .array(fieldname[, maxCount])
  Accept an array of files, all with the name fieldname. Example:
[
  { name: 'avatar', maxCount: 1 },
  { name: 'gallery', maxCount: 8 }
]

-.none()
Accept only text fields.

.any()
Accepts all files.

Key		Description								   Default
fieldNameSize	Max field name size							   100 bytes
fieldSize	Max field value size (in bytes)						   1MB
fields		Max number of non-file fields						   Infinity
fileSize	For multipart forms, the max file size (in bytes)			   Infinity
files		For multipart forms, the max number of file fields			   Infinity
parts		For multipart forms, the max number of parts (fields + files)		   Infinity
headerPairs	For multipart forms, the max number of header key=>value pairs to parse	   2000


File Filter:
function fileFilter (req, file, cb) {

  // The function should call `cb` with a boolean
  // to indicate if the file should be accepted

  // To reject this file pass `false`, like so:
  cb(null, false)

  // To accept the file pass `true`, like so:
  cb(null, true)

  // You can always pass an error if something goes wrong:
  cb(new Error('I don\'t have a clue!'))

}


Error handling:
const multer = require('multer')
const upload = multer().single('avatar')

app.post('/profile', function (req, res) {
  upload(req, res, function (err) {
    if (err instanceof multer.MulterError) {
      // A Multer error occurred when uploading.
    } else if (err) {
      // An unknown error occurred when uploading.
    }

    // Everything went fine.
  })
})
